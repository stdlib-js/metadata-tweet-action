{
  "version": 3,
  "sources": ["../lib/typed_arrays.js", "../lib/deep_copy.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( '@stdlib/array-int8' );\nvar Uint8Array = require( '@stdlib/array-uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array-uint8c' );\nvar Int16Array = require( '@stdlib/array-int16' );\nvar Uint16Array = require( '@stdlib/array-uint16' );\nvar Int32Array = require( '@stdlib/array-int32' );\nvar Uint32Array = require( '@stdlib/array-uint32' );\nvar Float32Array = require( '@stdlib/array-float32' );\nvar Float64Array = require( '@stdlib/array-float64' );\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nmodule.exports = hash;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isArray = require( '@stdlib/assert-is-array' );\nvar isBuffer = require( '@stdlib/assert-is-buffer' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar typeOf = require( '@stdlib/utils-type-of' );\nvar regexp = require( '@stdlib/utils-regexp-from-string' );\nvar indexOf = require( '@stdlib/utils-index-of' );\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar propertyNames = require( '@stdlib/utils-property-names' );\nvar propertyDescriptor = require( '@stdlib/utils-property-descriptor' );\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar defineProperty = require( '@stdlib/utils-define-property' );\nvar copyBuffer = require( '@stdlib/buffer-from-buffer' );\nvar typedArrays = require( './typed_arrays.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepCopy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert-is-array' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar deepCopy = require( './deep_copy.js' );\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', level ) );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy or deep clone a value to an arbitrary depth.\n*\n* @module @stdlib/utils-copy\n*\n* @example\n* var copy = require( '@stdlib/utils-copy' );\n*\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var copy = require( '@stdlib/utils-copy' );\n*\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ {'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_typed_arrays", "__commonJSMin", "exports", "module", "Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float32Array", "Float64Array", "hash", "int8array", "arr", "uint8array", "uint8clampedarray", "int16array", "uint16array", "int32array", "uint32array", "float32array", "float64array", "typedarrays", "out", "require_deep_copy", "__commonJSMin", "exports", "module", "hasOwnProp", "isArray", "isBuffer", "isError", "typeOf", "regexp", "indexOf", "objectKeys", "propertyNames", "propertyDescriptor", "getPrototypeOf", "defineProperty", "copyBuffer", "typedArrays", "cloneInstance", "val", "cache", "names", "name", "refs", "desc", "tmp", "ref", "i", "deepCopy", "copyError", "error", "keys", "key", "err", "copy", "level", "parent", "ctor", "x", "j", "require_main", "__commonJSMin", "exports", "module", "isArray", "isNonNegativeInteger", "format", "PINF", "deepCopy", "copy", "value", "level", "out", "main"]
}
