# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := copy_addon
### Rules for action "copy_addon":
quiet_cmd_binding_gyp_copy_addon_target_copy_addon = ACTION Copying addon... $@
cmd_binding_gyp_copy_addon_target_copy_addon = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p src; cp "$(builddir)/addon.node" src/addon.node

src/addon.node: obj := $(abs_obj)
src/addon.node: builddir := $(abs_builddir)
src/addon.node: TOOLSET := $(TOOLSET)
src/addon.node:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_copy_addon_target_copy_addon)

all_deps += src/addon.node
action_binding_gyp_copy_addon_target_copy_addon_outputs := src/addon.node


### Rules for final target.
# Build our special outputs first.
$(obj).target/copy_addon.stamp: | $(action_binding_gyp_copy_addon_target_copy_addon_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_copy_addon_target_copy_addon_outputs): | $(builddir)/addon.node

$(obj).target/copy_addon.stamp: TOOLSET := $(TOOLSET)
$(obj).target/copy_addon.stamp: $(builddir)/addon.node FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/copy_addon.stamp
# Add target alias
.PHONY: copy_addon
copy_addon: $(obj).target/copy_addon.stamp

# Add target alias to "all" target.
.PHONY: all
all: copy_addon

