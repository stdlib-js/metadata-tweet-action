"use strict";var b=function(n,e){return function(){return e||n((e={exports:{}}).exports,e),e.exports}};var G=b(function(Se,C){"use strict";var K=require("@stdlib/math-base-assert-is-nan"),Q=8;function $(n,e,t){var E,a;for(a=0;a<Q;a++)if(E=n(),K(E))throw new Error("unexpected error. PRNG returned NaN.");for(a=t-1;a>=0;a--)e[a]=n();return e}C.exports=$});var M=b(function(pe,j){"use strict";var ee=require("@stdlib/constants-int32-max"),re=require("@stdlib/math-base-special-floor"),te=ee-1;function ne(){var n=re(1+te*Math.random());return n|0}j.exports=ne});var L=b(function(be,V){"use strict";var v=require("@stdlib/utils-define-nonenumerable-read-only-property"),c=require("@stdlib/utils-define-nonenumerable-read-only-accessor"),U=require("@stdlib/utils-define-nonenumerable-read-write-accessor"),R=require("@stdlib/assert-has-own-property"),ae=require("@stdlib/assert-is-plain-object"),ie=require("@stdlib/assert-is-boolean").isPrimitive,se=require("@stdlib/assert-is-collection"),ue=require("@stdlib/assert-is-positive-integer").isPrimitive,z=require("@stdlib/assert-is-int32array"),d=require("@stdlib/blas-base-gcopy"),oe=require("@stdlib/math-base-special-floor"),s=require("@stdlib/array-int32"),S=require("@stdlib/constants-int32-max"),fe=require("@stdlib/array-to-json"),f=require("@stdlib/string-format"),D=G(),H=M(),q=S-1|0,Ee=S-1|0,le=16807,o=32,A=1,N=3,g=2,T=o+3,u=o+6,p=o+7,m=T+1,w=T+2;function J(n,e){var t;return e?t="option":t="argument",n.length<p+1?new RangeError(f("invalid %s. State array has insufficient length.",t)):n[0]!==A?new RangeError(f("invalid %s. State array has an incompatible schema version. Expected: `%s`. Actual: `%s`.",t,A,n[0])):n[1]!==N?new RangeError(f("invalid %s. State array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.",t,N,n[1])):n[g]!==o?new RangeError(f("invalid %s. State array has an incompatible table length. Expected: `%s`. Actual: `%s`.",t,o,n[g])):n[T]!==2?new RangeError(f("invalid %s. State array has an incompatible state length. Expected: `%u`. Actual: `%u`.",t,2,n[T])):n[u]!==n.length-p?new RangeError(f("invalid %s. State array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.",t,n.length-p,n[u])):null}function ve(n){var e,t,E,a,y,_;if(E={},arguments.length){if(!ae(n))throw new TypeError(f("invalid argument. Options argument must be an object. Value: `%s`.",n));if(R(n,"copy")&&(E.copy=n.copy,!ie(n.copy)))throw new TypeError(f("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",n.copy));if(R(n,"state")){if(t=n.state,E.state=!0,!z(t))throw new TypeError(f("invalid option. `%s` option must be an Int32Array. Option: `%s`.","state",t));if(_=J(t,!0),_)throw _;E.copy===!1?e=t:(e=new s(t.length),d(t.length,t,1,e,1)),t=new s(e.buffer,e.byteOffset+(g+1)*e.BYTES_PER_ELEMENT,o),a=new s(e.buffer,e.byteOffset+(u+1)*e.BYTES_PER_ELEMENT,t[u])}if(a===void 0)if(R(n,"seed"))if(a=n.seed,E.seed=!0,ue(a)){if(a>Ee)throw new RangeError(f("invalid option. `%s` option must be a positive integer less than the maximum signed 32-bit integer. Option: `%u`.","seed",a));a|=0}else if(se(a)&&a.length>0)y=a.length,e=new s(p+y),e[0]=A,e[1]=N,e[g]=o,e[T]=2,e[w]=a[0],e[u]=y,d.ndarray(y,a,1,0,e,1,u+1),t=new s(e.buffer,e.byteOffset+(g+1)*e.BYTES_PER_ELEMENT,o),a=new s(e.buffer,e.byteOffset+(u+1)*e.BYTES_PER_ELEMENT,y),t=D(O,t,o),e[m]=t[0];else throw new TypeError(f("invalid option. `%s` option must be either a positive integer less than the maximum signed 32-bit integer or an array-like object containing integer values less than the maximum signed 32-bit integer. Option: `%s`.","seed",a));else a=H()|0}else a=H()|0;return t===void 0&&(e=new s(p+1),e[0]=A,e[1]=N,e[g]=o,e[T]=2,e[w]=a,e[u]=1,e[u+1]=a,t=new s(e.buffer,e.byteOffset+(g+1)*e.BYTES_PER_ELEMENT,o),a=new s(e.buffer,e.byteOffset+(u+1)*e.BYTES_PER_ELEMENT,1),t=D(O,t,o),e[m]=t[0]),v(i,"NAME","minstd-shuffle"),c(i,"seed",I),c(i,"seedLength",P),U(i,"state",F,Y),c(i,"stateLength",x),c(i,"byteLength",B),v(i,"toJSON",X),v(i,"MIN",1),v(i,"MAX",S-1),v(i,"normalized",l),v(l,"NAME",i.NAME),c(l,"seed",I),c(l,"seedLength",P),U(l,"state",F,Y),c(l,"stateLength",x),c(l,"byteLength",B),v(l,"toJSON",X),v(l,"MIN",(i.MIN-1)/q),v(l,"MAX",(i.MAX-1)/q),i;function I(){var r=e[u];return d(r,a,1,new s(r),1)}function P(){return e[u]}function x(){return e.length}function B(){return e.byteLength}function F(){var r=e.length;return d(r,e,1,new s(r),1)}function Y(r){var h;if(!z(r))throw new TypeError(f("invalid argument. Must provide an Int32Array. Value: `%s`.",r));if(h=J(r,!1),h)throw h;E.copy===!1?E.state&&r.length===e.length?d(r.length,r,1,e,1):(e=r,E.state=!0):(r.length!==e.length&&(e=new s(r.length)),d(r.length,r,1,e,1)),t=new s(e.buffer,e.byteOffset+(g+1)*e.BYTES_PER_ELEMENT,o),a=new s(e.buffer,e.byteOffset+(u+1)*e.BYTES_PER_ELEMENT,e[u])}function X(){var r={};return r.type="PRNG",r.name=i.NAME,r.state=fe(e),r.params=[],r}function O(){var r=e[w]|0;return r=le*r%S|0,e[w]=r,r|0}function i(){var r,h;return r=e[m],h=oe(o*(r/S)),r=t[h],e[m]=r,t[h]=O(),r}function l(){return(i()-1)/q}}V.exports=ve});var k=b(function(me,W){"use strict";var ce=L(),ge=M(),he=ce({seed:ge()});W.exports=he});var de=require("@stdlib/utils-define-nonenumerable-read-only-property"),Z=k(),Te=L();de(Z,"factory",Te);module.exports=Z;
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
